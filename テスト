<?php
App::uses('AppController', 'Controller');

class RankingCampaignController extends AppController
{
  public $name = 'RankingCampaign';

  public function index() {
    $ranking_data = $this->fetchRankingData();
    $my_rank_data = $this->getMyRankData($ranking_data);
    $my_point = $this->fetchMyPointInCampaignPeriod();
    $this->set('ranking', $ranking_data);
    $this->set('my_rank', $my_rank_data);
    $this->set('my_point', $my_point);
  }

  // Jambo-serverにリクエストを送信してキャンペーンのランキングを取得する
  private function fetchRankingData() {
    $api_data = null;
    $api_data['api'] = 'get_campaign_ranking';
    $api_data['skip'] = 0;
    $api_data['take'] = 100;
    $api_data['id'] = $this->user_id;
    $result = $this->glas_sdk_admin->Reqest($api_data);
    return $result->data;
  }

  // Jambo-serverにリクエストを送信してキャンペーン期間中に稼いだポイントを取得する
  private function fetchMyPointInCampaignPeriod() {
    $api_data = null;
    $api_data['api'] = 'get_ranking_campaign_point';
    $api_data['id'] = $this->user_id;
    $result = $this->glas_sdk_admin->Reqest($api_data);
    return $result->data;
  }

  // 自分自身のランクに関するデータを取得する
  private function getMyRankData($ranking_data) {
    $my_rank = $this->findMyRank($ranking_data);
    $rank_label = $this->getMyRankLabel($my_rank);
    return [
      'rank' => $rank_label,
    ];
  }

  private function findMyRank($ranking_data) {
    foreach ($ranking_data as $data) {
      if ($data->user_id == $this->user_id) {
        return $data->rank;
      }
    }
    return null;
  }

  private function getMyRankLabel($rank) {
    if ($rank == null) {
      return "100位〜";
    } elseif ($rank <= 30) {
      return "{$rank}位";
    } elseif ($rank <= 100) {
      return "31〜100位";
    } else {
      return "100位〜";
    }
  }
}
